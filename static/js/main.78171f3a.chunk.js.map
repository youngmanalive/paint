{"version":3,"sources":["components/layout/global.js","components/layout/index.js","components/toolbar/style.js","components/icons/index.js","components/toolbar/button/style.js","components/toolbar/button/index.js","components/toolbar/rangeSlider/index.js","components/toolbar/colors/style.js","constants/colors.js","components/toolbar/colors/index.js","components/toolbar/index.js","components/style.js","utils/userAgent.js","components/app.js","index.js","stores/paintStore.js","utils/stringPress.js"],"names":["css","Layout","children","styles","global","Container","styled","div","Backdrop","BrushLine","size","UndoIcon","icon","faUndoAlt","RedoIcon","faRedoAlt","PaletteIcon","faPalette","SaveIcon","faSave","LoadIcon","faUpload","TrashIcon","faTrash","Wrapper","isActive","ActionPanel","isOpen","preventDefault","event","stopPropagation","Button","id","onClick","keys","useEffect","mousetrap","bind","unbind","Track","props","onMouseDown","onTouchStart","style","padding","display","justifyContent","height","ref","width","borderRadius","background","Thumb","isDragged","key","backgroundColor","RangeSlider","value","setValue","values","direction","Direction","Up","step","min","max","onChange","renderTrack","renderThumb","Color","color","active","Colors","currentColor","setColor","COLORS","map","inject","observer","paintStore","useState","currentPanel","setPanel","onPanelClick","currentTarget","undo","redo","reset","save","load","setSize","full","isMobile","setDimensions","Canvas","canvas","USER_AGENT_PARSED","UAParser","getResult","isDesktop","userAgentOsName","os","name","isWindows","indexOf","isMac","device","type","fullScreen","canvasRef","useRef","start","draw","stop","initialize","current","onMouseMove","onMouseUp","onMouseOut","onTouchMove","onTouchEnd","onTouchCancel","stores","hue","isInitialized","strokeHistory","session","redos","clientWidth","clientHeight","boundingClientRect","getBoundingClientRect","ctx","getContext","lineJoin","lineCap","stroke","lastX","lastY","clientX","clientY","strokeStyle","lineWidth","beginPath","moveTo","lineTo","touch","firstContact","touches","length","item","isDrawing","left","top","strokeData","push","redraw","stack","clear","forEach","entry","pop","clearRect","history","reduce","concat","compressed","string","currChar","dict","data","split","output","phrase","code","i","charCodeAt","String","fromCharCode","join","compress","JSON","stringify","localStorage","setItem","saved","getItem","parsed","parse","oldPhrase","currCode","charAt","decompress","e","observable","action","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.78171f3a.chunk.js","sourcesContent":["import { css } from \"@emotion/core\";\n\nexport default css`\n  html {\n    box-sizing: border-box;\n    -ms-overflow-style: scrollbar;\n    -webkit-tap-highlight-color: transparent;\n    overflow-x: hidden;\n    font-size: 16px;\n  }\n  *,\n  *::before,\n  *::after {\n    box-sizing: inherit;\n  }\n  [tabindex=\"-1\"]:focus {\n    outline: none !important;\n  }\n  div {\n    margin: 0;\n    padding: 0;\n  }\n  h1, h2, h3, h4, h5, h6 {\n    margin: 0;\n  }\n  p {\n    margin: 0;\n  }\n  abbr[title],\n  abbr[data-original-title] {\n    cursor: help;\n  }\n  address {\n    margin-bottom: 1rem;\n    font-style: normal;\n    line-height: inherit;\n  }\n  ol,\n  ul,\n  dl {\n    margin-top: 0;\n    margin-bottom: 1rem;\n  }\n  ol ol,\n  ul ul,\n  ol ul,\n  ul ol {\n    margin-bottom: 0;\n  }\n  dd {\n    margin-bottom: .5rem;\n    margin-left: 0;\n  }\n  blockquote {\n    margin: 0 0 1rem;\n  }\n  a:not([href]):not([tabindex]) {\n    text-decoration: none;\n    &:hover,\n    &:focus {\n      color: inherit;\n      text-decoration: none;\n    }\n    &:focus {\n      outline: 0;\n    }\n  }\n  pre {\n    margin-top: 0;\n    margin-bottom: 1rem;\n    overflow: auto;\n  }\n  figure {\n    margin: 0 0 1rem;\n  }\n  img {\n    display: block;\n    max-width: 100%;\n    vertical-align: middle;\n  }\n  [role=\"button\"] {\n    cursor: pointer;\n  }\n  a,\n  area,\n  button,\n  [role=\"button\"],\n  input,\n  label,\n  select,\n  summary,\n  textarea {\n    touch-action: manipulation;\n  }\n  table {\n    border-collapse: collapse;\n  }\n  caption {\n    text-align: left;\n    caption-side: bottom;\n  }\n  th {\n    text-align: left;\n  }\n  label {\n    display: inline-block;\n    margin-bottom: 0rem;\n  }\n  button:focus {\n    outline: 1px dotted;\n    outline: 5px auto -webkit-focus-ring-color;\n  }\n  input,\n  button,\n  select,\n  textarea {\n    line-height: inherit;\n    font-family: inherit;\n    font-size: inherit;\n  }\n  input[type=\"radio\"],\n  input[type=\"checkbox\"] {\n    &:disabled {\n      cursor: not-allowed;\n    }\n  }\n  input[type=\"date\"],\n  input[type=\"time\"],\n  input[type=\"datetime-local\"],\n  input[type=\"month\"] {\n    -webkit-appearance: listbox;\n  }\n  textarea {\n    resize: vertical;\n  }\n  fieldset {\n    min-width: 0;\n    padding: 0;\n    margin: 0;\n    border: 0;\n  }\n  legend {\n    display: block;\n    width: 100%;\n    padding: 0;\n    margin-bottom: .5rem;\n    font-size: 1.5rem;\n    line-height: inherit;\n  }\n  input {\n    border-radius: 0;\n  }\n  [hidden] {\n    display: none !important;\n  }\n  body {\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n    font-family: sans-serif;\n    margin: 0;\n    transition-timing-function: ease-in-out;\n  }\n  img {\n    max-width: 100%;\n  }\n  ul {\n    list-style: none;\n    padding: 0;\n  }\n  a {\n    color: inherit;\n  }\n  p a {\n    color: inherit;\n    border-bottom: 1px solid;\n    text-decoration: none;\n    transition: 350ms;\n    &:hover,\n    &:focus,\n    &:visited {\n      opacity: .6;\n      transition: 350ms;\n    }\n  }\n  .no-scroll {\n    overflow: hidden;\n  }\n`;\n","import React from \"react\";\nimport { Global } from \"@emotion/core\";\n\nimport global from \"./global\";\n\nconst Layout = ({ children }) => (\n  <>\n    <Global styles={global} />\n    {children}\n  </>\n);\n\nexport default Layout;\n","import styled from '@emotion/styled';\nimport { css } from '@emotion/core';\n\nexport const Container = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  margin: 3px 3px 0 0;\n  border: 1px solid #ededed;\n  padding: 6px;\n  border-radius: 6px;\n  display: flex;\n  flex-direction: column;\n  box-shadow: -6px 0px 33px -8px rgba(207,207,207,1);\n  background: white;\n  z-index: 10;\n  cursor: pointer;\n`;\n\nexport const Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 9;\n  background-color: grey;\n  opacity: 0.1;\n`;\n\nexport const BrushLine = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%) rotate(-45deg);\n  width: 75%;\n  border-radius: 6px;\n  background-color: black;\n\n  ${({ size }) => css`\n    height: ${size}px;\n  `}\n`;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUndoAlt, faRedoAlt, faPalette, faSave, faUpload, faTrash } from '@fortawesome/free-solid-svg-icons';\n\nexport const UndoIcon = <FontAwesomeIcon icon={faUndoAlt} />;\nexport const RedoIcon = <FontAwesomeIcon icon={faRedoAlt} />;\nexport const PaletteIcon = <FontAwesomeIcon icon={faPalette} />;\nexport const SaveIcon = <FontAwesomeIcon icon={faSave} />;\nexport const LoadIcon = <FontAwesomeIcon icon={faUpload} />;\nexport const TrashIcon = <FontAwesomeIcon icon={faTrash} />;\n","import styled from '@emotion/styled';\nimport { css } from '@emotion/core';\n\nexport const Wrapper = styled.div`\n  position: relative;\n  z-index: 10;\n\n  ${({ isActive }) => isActive && css`\n    &:after {\n      content: '';\n      display: block;\n      width: 0;\n      height: 0;\n      position: absolute;\n      border-top: 8px solid transparent;\n      border-bottom: 8px solid transparent;\n      border-left: 8px solid white;\n      left: -15px;\n      top: 12px;\n      z-index: 10;\n    }\n  `}\n`;\n\nexport const Container = styled.div`\n  position: relative;\n  width: 30px;\n  height: 30px;\n  z-index: 10;\n  background: white;\n  margin: 5px 0;\n  border-radius: 3px;\n  transition: 150ms transform ease;\n\n  & svg {\n    width: 100% !important;\n    height: 100% !important;\n    padding: 6px;\n  }\n\n  ${({ isActive }) => isActive && css`\n    transform: scale(1.1);\n    background: #f5f5f5;\n  `}\n\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n\nexport const ActionPanel = styled.div`\n  position: absolute;\n  top: 0;\n  left: -65px;\n  width: 50px;\n  max-height: 0;\n  overflow: hidden;\n  background: white;\n  z-index: 10;\n  border-radius: 6px;\n  opacity: 0;\n  box-shadow: -6px 0px 33px -8px rgba(207,207,207,1);\n  transition: max-height 250ms ease, opacity 200ms ease;\n\n\n  ${({ isOpen }) => isOpen && css`\n    max-height: 240px;\n    overflow-y: scroll;\n    opacity: 1;\n  `}\n`;\n","import React, { useEffect } from 'react';\nimport mousetrap from 'mousetrap';\n\nimport { Wrapper, Container, ActionPanel } from './style';\n\nconst preventDefault = event => {\n  event.preventDefault();\n  event.stopPropagation();\n};\n\nconst Button = ({ id, icon, onClick, isOpen, children, keys }) => {\n  useEffect(() => {\n    if (keys) {\n      mousetrap.bind(keys, onClick);\n      return () => mousetrap.unbind(keys, onClick);\n    }\n  }, [keys, onClick]);\n\n  return (\n    <Wrapper isActive={isOpen}>\n      <Container id={id} onClick={onClick} isActive={isOpen}>\n        {icon && icon}\n      </Container>\n      {children && (\n        <ActionPanel onClick={preventDefault} isOpen={isOpen}>\n          {children}\n        </ActionPanel>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport { Range, Direction } from 'react-range';\n\nconst STEP = 1;\nconst MIN = 1;\nconst MAX = 18;\n\nconst Track = ({ props, children }) => (\n  <div\n    onMouseDown={props.onMouseDown}\n    onTouchStart={props.onTouchStart}\n    style={{\n      ...props.style,\n      padding: '20px 0',\n      display: 'flex',\n      justifyContent: 'center',\n      height: '150px'\n    }}\n  >\n    <div\n      ref={props.ref}\n      style={{\n        width: '5px',\n        height: '100%',\n        borderRadius: '4px',\n        background: 'grey'\n      }}\n    >\n      {children}\n    </div>\n  </div>\n);\n\nconst Thumb = ({ isDragged }) => (\n  <div\n    key='thumb'\n    style={{\n      height: '14px',\n      width: '24px',\n      borderRadius: '5px',\n      backgroundColor: isDragged ? '#548BF4' : '#CCC'\n    }}\n  />\n);\n\nconst RangeSlider = ({ value, setValue }) => (\n  <Range\n    values={[value]}\n    direction={Direction.Up}\n    step={STEP}\n    min={MIN}\n    max={MAX}\n    onChange={values => setValue(values[0])}\n    renderTrack={Track}\n    renderThumb={Thumb}\n  />\n);\n\nexport default RangeSlider;\n","import styled from '@emotion/styled';\nimport { css } from '@emotion/core';\n\nexport const Color = styled.div`\n  position: relative;\n  width: 22px;\n  height: 22px;\n  margin: 4px;\n  border: 1px solid grey;\n  border-radius: 10%;\n  transition: all 200ms;\n  font-size: 17px;\n  text-align: center;\n\n  &:hover {\n    opacity: 0.5;\n  }\n\n  ${({ color }) => color && css`\n    background-color: ${color};\n  `}\n\n  ${({ active }) => active && css`\n    width: 28px;\n    height: 28px;\n    border-width: 2px;\n  `}\n`;\n","export default [\n  \"black\",\n  \"grey\",\n  \"white\",\n  \"red\",\n  \"pink\",\n  \"orange\",\n  \"yellow\",\n  \"green\",\n  \"darkgreen\",\n  \"blue\",\n  \"indigo\",\n  \"violet\",\n  \"brown\",\n  \"saddlebrown\",\n  \"\"\n];","import React from 'react';\n\nimport { Color } from './style';\nimport COLORS from 'constants/colors';\n\nconst Colors = ({ currentColor, setColor }) =>\n  COLORS.map(color => (\n    <Color\n      key={color}\n      color={color}\n      active={currentColor === color}\n      onClick={() => setColor(color)}\n    />\n  ));\n\nexport default Colors;\n","import React, { useState } from 'react';\nimport { inject, observer } from 'mobx-react';\n\nimport { Container, Backdrop, BrushLine } from './style';\nimport {\n  UndoIcon,\n  RedoIcon,\n  PaletteIcon,\n  SaveIcon,\n  LoadIcon,\n  TrashIcon\n} from 'components/icons';\nimport Button from './button';\nimport RangeSlider from './rangeSlider';\nimport Colors from './colors';\n\nconst Toolbar = ({ paintStore }) => {\n  const [currentPanel, setPanel] = useState(null);\n\n  const onPanelClick = ({ currentTarget: { id } }) => {\n    setPanel(currentPanel === id ? null : id);\n  };\n\n  return (\n    <>\n      {!!currentPanel && <Backdrop onClick={() => setPanel(null)} />}\n      <Container>\n        <Button\n          id='undo'\n          icon={UndoIcon}\n          onClick={paintStore.undo}\n          keys='command+z'\n        />\n        <Button\n          id='redo'\n          icon={RedoIcon}\n          onClick={paintStore.redo}\n          keys='command+shift+z'\n        />\n        <Button\n          id='reset'\n          icon={TrashIcon}\n          onClick={paintStore.reset}\n          keys='command+shift+t'\n        />\n        <Button\n          id='save'\n          icon={SaveIcon}\n          onClick={paintStore.save}\n          keys='command+s'\n        />\n        <Button\n          id='load'\n          icon={LoadIcon}\n          onClick={paintStore.load}\n          keys='command+l'\n        />\n        <Button\n          id='colors'\n          icon={PaletteIcon}\n          onClick={onPanelClick}\n          isOpen={currentPanel === 'colors'}\n        >\n          <Colors\n            currentColor={paintStore.color}\n            setColor={paintStore.setColor}\n          />\n        </Button>\n        <Button\n          id='brush'\n          icon={<BrushLine size={paintStore.size} />}\n          onClick={onPanelClick}\n          isOpen={currentPanel === 'brush'}\n        >\n          <RangeSlider value={paintStore.size} setValue={paintStore.setSize} />\n        </Button>\n      </Container>\n    </>\n  );\n};\n\nexport default inject('paintStore')(observer(Toolbar));\n","import styled from '@emotion/styled';\nimport { css } from '@emotion/core';\n\nconst setDimensions = (full, isMobile) => {\n  switch (true) {\n    case isMobile:\n      return css`\n        height: 86vh;\n        width: 100vw;\n      `;\n    case full:\n      return css`\n        height: 100vh;\n        width: 100vw;\n      `;\n    default:\n      return css`\n        height: 100%;\n        width: 100%;\n      `;\n  }\n};\n\nexport const Container = styled.div`\n  position: fixed;\n  font-family: sans-serif;\n\n  ${({ full, isMobile }) => setDimensions(full, isMobile)}\n`;\n\nexport const Canvas = styled.canvas`\n  background-color: white;\n  width: 100%;\n  height: 100%;\n`;\n","import UAParser from 'ua-parser-js';\n\nconst USER_AGENT_PARSED = new UAParser().getResult();\n\nexport const isDesktop = (() => {\n  const userAgentOsName = USER_AGENT_PARSED.os.name || [];\n  const isWindows = userAgentOsName.indexOf('Windows') !== -1;\n  const isMac = userAgentOsName.indexOf('Mac') !== -1;\n  return isWindows || isMac;\n})();\n\nexport const isMobile = (() => {\n  const isMobileDevice = USER_AGENT_PARSED.device.type === 'mobile';\n  return isMobileDevice || !isDesktop;\n})();\n","import React, { useRef, useEffect } from 'react';\nimport { observer, inject } from 'mobx-react';\n\nimport Layout from './layout';\nimport Toolbar from './toolbar';\nimport { Container, Canvas } from './style';\nimport { isMobile } from 'utils/userAgent';\n\nconst App = ({ paintStore, fullScreen }) => {\n  const canvasRef = useRef(null);\n  const { start, draw, stop } = paintStore;\n\n  useEffect(() => paintStore.initialize(canvasRef.current), [paintStore]);\n\n  return (\n    <Layout>\n      <Container full={fullScreen} isMobile={isMobile}>\n        <Canvas\n          ref={canvasRef}\n          onMouseDown={start}\n          onMouseMove={draw}\n          onMouseUp={stop}\n          onMouseOut={stop}\n          onTouchStart={start}\n          onTouchMove={draw}\n          onTouchEnd={stop}\n          onTouchCancel={stop}\n        />\n        <Toolbar />\n      </Container>\n    </Layout>\n  );\n};\n\nexport default inject('paintStore')(observer(App));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'mobx-react';\n\nimport App from 'components/app';\nimport PaintStore from './stores/paintStore';\n\nconst stores = {\n  paintStore: new PaintStore()\n};\n\nReactDOM.render(\n  <Provider {...stores}>\n    <App fullScreen />\n  </Provider>,\n  document.getElementById('root')\n);\n","import { observable, action } from 'mobx';\n\nimport { compress, decompress } from 'utils/stringPress';\n\nclass PaintStore {\n  canvas;\n  ctx;\n  lastX;\n  lastY;\n  hue = 0;\n  isInitialized = false;\n  strokeHistory = [];\n  session = [];\n  redos = [];\n\n  @observable\n  isDrawing = false;\n\n  @observable\n  color = 'black';\n\n  @observable\n  size = 6;\n\n  @action\n  setColor = color => {\n    this.color = color;\n  };\n\n  @action\n  setSize = size => {\n    this.size = size;\n  };\n\n  initialize = canvas => {\n    if (!this.isInitialized && canvas) {\n      this.canvas = canvas;\n      this.canvas.width = canvas.clientWidth;\n      this.canvas.height = canvas.clientHeight;\n      this.boundingClientRect = canvas.getBoundingClientRect();\n      this.ctx = canvas.getContext('2d');\n      this.ctx.lineJoin = 'round';\n      this.ctx.lineCap = 'round';\n      this.isInitialized = true;\n    }\n  };\n\n  stroke = ({ color, size, lastX, lastY, clientX, clientY }) => {\n    this.ctx.strokeStyle = color;\n    this.ctx.lineWidth = size;\n    this.ctx.beginPath();\n    this.ctx.moveTo(lastX, lastY);\n    this.ctx.lineTo(clientX, clientY);\n    this.ctx.stroke();\n  };\n\n  draw = (event, firstContact = false) => {\n    let touch;\n    if (event.touches && event.touches.length) {\n      touch = event.touches.item(0);\n    }\n    if (!this.isDrawing) return;\n    const { left, top } = this.boundingClientRect;\n\n    const color = !this.color ? `hsl(${this.hue++}, 100%, 50%)` : this.color;\n    const size = this.size;\n    const clientX = (touch ? touch.clientX : event.clientX) - left;\n    const clientY = (touch ? touch.clientY : event.clientY) - top;\n    const lastX = firstContact ? clientX : this.lastX;\n    const lastY = firstContact ? clientY : this.lastY;\n\n    const strokeData = { color, size, lastX, lastY, clientX, clientY };\n\n    this.stroke(strokeData);\n    this.session.push(strokeData);\n\n    this.lastX = clientX;\n    this.lastY = clientY;\n  };\n\n  redraw = (stack = this.strokeHistory) => {\n    this.clear();\n    stack.forEach(entry => {\n      entry.forEach(this.stroke);\n    });\n  };\n\n  start = event => {\n    this.isDrawing = true;\n    if (this.redos.length) {\n      this.redos = [];\n    }\n    this.draw(event, true);\n  };\n\n  stop = () => {\n    if (this.isDrawing) {\n      this.isDrawing = false;\n      this.strokeHistory.push(this.session);\n      this.session = [];\n    }\n  };\n\n  undo = () => {\n    this.redos.push(this.strokeHistory.pop());\n    this.redraw();\n  };\n\n  redo = () => {\n    if (this.redos.length) {\n      this.strokeHistory.push(this.redos.pop());\n      this.redraw();\n    }\n  };\n\n  clear = () => {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  };\n\n  reset = () => {\n    this.strokeHistory = [];\n    this.session = [];\n    this.redos = [];\n    this.clear();\n  };\n\n  save = () => {\n    const history = this.strokeHistory.reduce(\n      (history, entry) =>\n        history.concat(\n          entry.map(step => [\n            step.lastX,\n            step.lastY,\n            step.clientX,\n            step.clientY,\n            step.color,\n            step.size\n          ])\n        ),\n      []\n    );\n\n    const compressed = compress(JSON.stringify(history));\n\n    localStorage.setItem('saved', compressed);\n  };\n\n  load = () => {\n    const saved = localStorage.getItem('saved');\n    if (!saved) return;\n\n    try {\n      const parsed = JSON.parse(decompress(saved)).map(entry => {\n        const [lastX, lastY, clientX, clientY, color, size] = entry;\n        return { lastX, lastY, clientX, clientY, color, size };\n      });\n      this.reset();\n      this.strokeHistory.push(parsed);\n      this.redraw();\n    } catch (e) {}\n  };\n}\n\nexport default PaintStore;\n","/**\n * LZW COMPRESSION / DECOMPRESSION\n */\n\nexport const compress = string => {\n  if (!string) return;\n\n  const dict = {};\n  const data = string.split('');\n  const output = [];\n  let currChar;\n  let phrase = data[0];\n  let code = 256;\n\n  for (let i = 1; i < data.length; i++) {\n    currChar = data[i];\n\n    if (dict[phrase + currChar] != null) {\n      phrase += currChar;\n    } else {\n      output.push(phrase.length > 1 ? dict[phrase] : phrase.charCodeAt(0));\n      dict[phrase + currChar] = code;\n      code++;\n      phrase = currChar;\n    }\n  }\n\n  output.push(phrase.length > 1 ? dict[phrase] : phrase.charCodeAt(0));\n\n  for (let i = 0; i < output.length; i++) {\n    output[i] = String.fromCharCode(output[i]);\n  }\n  return output.join('');\n};\n\nexport const decompress = string => {\n  if (!string) return;\n\n  const dict = {};\n  const data = string.split('');\n  let currChar = data[0];\n  let oldPhrase = currChar;\n  let output = [currChar];\n  let code = 256;\n  let phrase;\n\n  for (let i = 1; i < data.length; i++) {\n    let currCode = data[i].charCodeAt(0);\n\n    if (currCode < 256) {\n      phrase = data[i];\n    } else {\n      phrase = dict[currCode] ? dict[currCode] : oldPhrase + currChar;\n    }\n\n    output.push(phrase);\n    currChar = phrase.charAt(0);\n    dict[code] = oldPhrase + currChar;\n    code++;\n    oldPhrase = phrase;\n  }\n\n  return output.join('');\n};\n"],"sourceRoot":""}